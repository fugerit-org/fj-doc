<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.fugerit.java</groupId>
		<artifactId>fj-doc</artifactId>
		<version>3.1.4</version>
	</parent>
	<artifactId>fj-doc-playground-quarkus</artifactId>
	<properties>
		<maven.deploy.skip>true</maven.deploy.skip>
		<maven.compiler.release>11</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
		<quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
		<quarkus.platform.version>3.4.2</quarkus.platform.version>
		<skipITs>true</skipITs>
		<surefire-plugin.version>${mvn-surefire-version}</surefire-plugin.version>
		<!-- front end runtime -->
		<src.react>src/main/react</src.react>
		<npm.build.script>build</npm.build.script>
		<fe.dist.dir>src/main/resources/META-INF/resources/fj-doc-playground/home</fe.dist.dir>
		<exec-plugin.version>3.1.0</exec-plugin.version>
		<antrun-plugin.version>3.1.0</antrun-plugin.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>${quarkus.platform.artifact-id}</artifactId>
				<version>${quarkus.platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-config-yaml</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.quarkus</groupId>
		    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-arc</artifactId>
		</dependency>	
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.fugerit.java</groupId>
			<artifactId>fj-doc-sample</artifactId>
			<exclusions>
	            <exclusion>
	                <artifactId>xml-apis</artifactId>
	                <groupId>xml-apis</groupId>
	            </exclusion>
			</exclusions>
		</dependency>	
		<dependency>
			<groupId>org.fugerit.java</groupId>
			<artifactId>fj-doc-val</artifactId>
			<exclusions>
	            <exclusion>
	                <artifactId>xml-apis</artifactId>
	                <groupId>xml-apis</groupId>
	            </exclusion>
			</exclusions>
		</dependency>	
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus.platform.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
							<goal>generate-code</goal>
							<goal>generate-code-tests</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<maven.home>${maven.home}</maven.home>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<maven.home>${maven.home}</maven.home>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<executions>
					<execution>
						<configuration>
							<shortRevisionLength>10</shortRevisionLength>
							<attach>true</attach>
							<!--make it available for jar/war classpath resource -->
							<addOutputDirectoryToResources>true</addOutputDirectoryToResources>
						</configuration>
						<phase>generate-resources</phase>
						<goals>
							<goal>create-metadata</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-deploy-plugin</artifactId>
              <version>3.1.1</version>
              <configuration>
                <skip>true</skip>
              </configuration>
            </plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<properties>
				<skipITs>false</skipITs>
				<quarkus.package.type>native</quarkus.package.type>
			</properties>
		</profile>

		<profile>
			<id>test</id>
			<build>
				<plugins>	
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
			          		<skipTests>true</skipTests>
			        	</configuration>
					</plugin>
				</plugins>
				
			</build>
		</profile>	

		<profile>
			<id>testquarkus</id>
			<build>
				<plugins>	
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
			          		<skipTests>false</skipTests>
			        	</configuration>
					</plugin>
				</plugins>
				
			</build>
		</profile>	


		<profile>

			<id>buildreact</id>

			<build>

				<plugins>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-plugin.version}</version>
						<executions>
							<!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Default Lifecycle' -->
							<execution>
								<id>npm install (initialize)</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>--legacy-peer-deps</argument>
									</arguments>
									<workingDirectory>${src.react}</workingDirectory>
								</configuration>
							</execution>
							<!-- Required: The following will ensure `npm install` is called
                         before anything else during the 'Clean Lifecycle' -->
							<execution>
								<id>npm install (clean)</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>pre-clean</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>install</argument>
										<argument>--legacy-peer-deps</argument>
									</arguments>
									<workingDirectory>${src.react}</workingDirectory>
								</configuration>
							</execution>

							<!-- Required: This following calls `npm run build` where 'build' is
                         the script name I used in my project, change this if yours is
                             different -->
							<execution>
								<id>npm run build (compile)</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<executable>npm</executable>
									<arguments>
										<argument>run</argument>
										<argument>${npm.build.script}</argument>
									</arguments>
									<workingDirectory>${src.react}</workingDirectory>
								</configuration>
							</execution>

						</executions>

					</plugin>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>copy front end</id>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<delete dir="${fe.dist.dir}" />
										<mkdir dir="${fe.dist.dir}" />
										<copy todir="${fe.dist.dir}">
											<fileset dir="${src.react}/build">
												<include name="**/*.*" />
											</fileset>
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>

			</build>

		</profile>
		
	</profiles>
	
</project>
