# CI maven compatibility check
#
# version 1.0.0
#
# see : https://universe.fugerit.org/src/docs/conventions/workflows/build_maven_compatibility.html

name: CI maven compatibility check

on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
  push:
    branches:
      - branch-compatibility

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# only allow one workflow at time on the give activation
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check-main:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        distribution: [ 'corretto' ]
        java: [ '17', '21', '24' ]
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
    name: Java ${{ matrix.os }} ${{ matrix.java }} (${{ matrix.distribution }}) compatibility check
    steps:
      - uses: actions/checkout@main
      - name: Setup java
        uses: actions/setup-java@main
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}
      - name: Maven build
        run: mvn clean install -P full,coverage
  check-alt:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        distribution: [ 'oracle', 'temurin' ]
        java: [ '17' ]
        os: [ 'ubuntu-latest' ]
    name: Java ${{ matrix.os }} ${{ matrix.java }} (${{ matrix.distribution }}) compatibility check
    steps:
      - uses: actions/checkout@main
      - name: Setup java
        uses: actions/setup-java@main
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}
      - name: Maven build
        run: mvn clean install -P full,coverage
  check-graal:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        distribution: [ 'graalvm' ]
        java: [ '21', '24' ]
        os: [ 'ubuntu-latest' ]
    name: Java ${{ matrix.os }} ${{ matrix.java }} (${{ matrix.distribution }}) compatibility check
    steps:
      - uses: actions/checkout@main
      - name: Setup java
        uses: actions/setup-java@main
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}
      - name: Maven build
        run: mvn clean install -P full,coverage
  check-ms:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        distribution: [ 'microsoft' ]
        java: [ '17' ]
        os: [ 'windows-latest' ]
    name: Java ${{ matrix.os }} ${{ matrix.java }} (${{ matrix.distribution }}) compatibility check
    steps:
      - uses: actions/checkout@main
      - name: Setup java
        uses: actions/setup-java@main
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}
      - name: Maven build
        run: mvn clean install -P full,coverage